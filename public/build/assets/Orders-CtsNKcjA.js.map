{"version":3,"mappings":"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","names":["filtersData","o","i","response","doctor","error","country","product","company","pharmacy","client","_sfc_main","orderStatuses","Treeselect","defineAsyncComponent","__vitePreload","result","instance","node","_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_4","_hoisted_5","_openBlock","_createElementBlock","_hoisted_3","_createVNode","_component_TableComponentSearch","_ctx"],"ignoreList":[],"sources":["../../../resources/assets/js/mixins/filtersData.js","../../../resources/assets/js/components/pages/Orders.vue"],"sourcesContent":["export default {\n    methods: {\n        setupFilters(){\n            this.filters.find((o, i) => {\n                switch (o.value) {\n                    case 'status':\n                        o.options = this.orderStatusesSelect;\n                        break;\n                    case 'status-extended':\n                        o.options = this.orderStatusesOptionsComputed;\n                        break;\n                    case 'doctor':\n                        axios.get('/doctors')\n                        .then((response) => {\n                            response.data.data.forEach(doctor => {\n                                o.options.push({\n                                    label: doctor.Title + ' '+ doctor.Name + ' '+ doctor.Surname,\n                                    id: doctor.DoctorID\n                                });\n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })     \n                        // o.options = this.orderStatusesSelect;\n                        break;                         \n                    case 'country':\n                        axios.get('/countries')\n                        .then((response) => {\n                            response.data.data.forEach(country => {\n                                if(country.CountryID != 1 && country.CountryID != 244 && country.CountryID != 245){\n                                    o.options.push({\n                                        label: country.Name,\n                                        id: country.CountryID\n                                    });\n                                } else if(country.CountryID == 1){\n                                    o.options.push({\n                                        label: country.Name,\n                                        id: country.CountryID,\n                                        children: [ \n                                            {\n                                                id: '1-northern-ireland',\n                                                label: 'Northern Ireland',\n                                                customLabel: `United Kingdom - Northern Ireland`\n                                            }, \n                                            {\n                                                id: '1-great-britain',\n                                                label: 'Great Britain',\n                                                customLabel: `United Kingdom - Great Britain`\n                                            },\n                                            {\n                                                id: 244,\n                                                label: 'Jersey',\n                                                customLabel: `United Kingdom - Jersey`\n                                            },\n                                            {\n                                                id: 245,\n                                                label: 'Guernsey',\n                                                customLabel: `United Kingdom - Guernsey`\n                                            },\n                                        ]                                        \n                                    });\n                                }\n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })                          \n                        // o.options = this.orderStatusesSelect;\n                        break;\n                    case 'product':\n                        axios.get('/products')\n                        .then((response) => {\n                            response.data.data.forEach(product => {\n                                o.options.push({\n                                    title: product.Name,\n                                    value: product.Code\n                                });\n                                // o.options.push({\n                                //     label: product.Name,\n                                //     id: product.Code\n                                // });                                \n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })                          \n                        // o.options = this.orderStatusesSelect;\n                        break;                        \n                    case 'delivery':\n                        axios.get('/delivery-companies')\n                        .then((response) => {\n                            response.data.data.forEach(company => {\n                                o.options.push({\n                                    label: company.Name,\n                                    id: company.SettingID\n                                });\n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })     \n                        // o.options = this.orderStatusesSelect;\n                        break;\n                    case 'pharmacy':\n                        axios.get('/pharmacies/list')\n                        .then((response) => {\n                            console.log(\"in filterData\");\n                            response.data.data.forEach(pharmacy => {\n                                o.options.push({\n                                    label: pharmacy.Title,\n                                    id: company.PharmacyID\n                                });\n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })     \n                        // o.options = this.orderStatusesSelect;\n                        break;\n                    case 'client':\n                        axios.get('/clients')\n                        .then((response) => {\n                            response.data.data.forEach(client => {\n                                o.options.push({\n                                    label: client.CompanyName,\n                                    id: client.ClientID\n                                });\n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })     \n                        // o.options = this.orderStatusesSelect;\n                        break;                          \n                    default:\n                        break;\n                }      \n            });      \n        }\n    },\n}","<template>\n    <div class=\"content\">\n        <section class=\"card\">\n            <div class=\"card-header\">\n                <h3>Orders</h3>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"orderSearch\">\n                    <TableComponentSearch data-url=\"/orders\" column-class=\"col-lg-12\" table-title=\"Orders\"\n                        redirect-name=\"order\" redirect-id=\"ReferenceNumber\"\n                        :hidden-columns=\"['checked', 'ActivityID', 'Arguments']\" :filters=\"filters\"\n                        :column-map=\"columnMap\" deleteUrl=\"/orders\" deleteId=\"ReferenceNumber\"\n                        :not-orderable=\"['Pharmacies']\" />\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<style>\n@import \"@zanmato/vue3-treeselect/dist/vue3-treeselect.min.css\";\n</style>\n\n\n<script>\nimport { defineAsyncComponent } from 'vue'\nimport orderStatuses from '../../mixins/constants/orderStatuses'\nimport filtersData from '../../mixins/filtersData'\nimport Treeselect from \"@zanmato/vue3-treeselect\";\n\nexport default {\n    mixins: [orderStatuses, filtersData],\n    components: {\n        Treeselect\n    },\n    data: function () {\n        return {\n            pharmacies: [],\n            userInfo: userInfo,\n            columnMap: {\n                'PrescriptionID': 'ID',\n                'DeliveryID': 'Delivery Company',\n                'CompanyName': 'Client',\n                'ReferenceNumber': 'Reference Number',\n            },\n            filters: [\n                {\n                    title: 'Start Date',\n                    value: 'start_date',\n                    type: 'date',\n                },\n                {\n                    title: 'End Date',\n                    value: 'end_date',\n                    type: 'date',\n                },\n                {\n                    title: 'Timestamp',\n                    value: 'timestamp',\n                    type: 'select',\n                    options: [\n                        {\n                            title: 'Select Date Type',\n                            value: ''\n                        },\n                        {\n                            title: 'Recieved Date',\n                            value: 'recieved_date'\n                        },\n                        {\n                            title: 'Processed Date',\n                            value: 'processed_date'\n                        }\n                    ]\n                },\n                {\n                    title: 'Reference Number',\n                    value: 'reference',\n                    type: 'text',\n                },\n                {\n                    title: 'Pharmacy',\n                    value: 'pharmacy',\n                    type: 'select-normal',\n                    options: this.pharmacies,\n                    loadOptions: this.pharmacies,\n                    multiple: true,\n                    clearable: true,\n                    placeholder: 'Select Pharmacy',\n                },\n                {\n                    title: 'Status',\n                    value: 'status',\n                    type: 'select',\n                    clearable: true,\n                    placeholder: 'Select Prescription Status',\n                    options: []\n                },\n                {\n                    title: 'Order ID',\n                    value: 'order_id',\n                    type: 'text',\n                },\n            ]\n        }\n    },\n    components: {\n        'TableComponentSearch': defineAsyncComponent(() => import('../TableComponentSearch.vue')),\n    },\n    mounted() {\n        this.filters.find((o, i) => {\n            switch (o.value) {\n                case 'status':\n                    o.options = this.orderStatusesSelect;\n                    break;\n                case 'doctor':\n                    axios.get('/doctors')\n                        .then((response) => {\n                            response.data.data.forEach(doctor => {\n                                o.options.push({\n                                    title: doctor.Title + ' ' + doctor.Name + ' ' + doctor.Surname,\n                                    value: doctor.DoctorID\n                                });\n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })\n                    // o.options = this.orderStatusesSelect;\n                    break;\n                case 'country':\n                    axios.get('/countries')\n                        .then((response) => {\n                            response.data.data.forEach(country => {\n                                o.options.push({\n                                    title: country.Name,\n                                    value: country.CountryID\n                                });\n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })\n                    // o.options = this.orderStatusesSelect;\n                    break;\n                case 'product':\n                    axios.get('/products')\n                        .then((response) => {\n                            response.data.data.forEach(product => {\n                                o.options.push({\n                                    title: product.Name,\n                                    value: product.Code\n                                });\n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })\n                    // o.options = this.orderStatusesSelect;\n                    break;\n                case 'delivery':\n                    axios.get('/delivery-companies')\n                        .then((response) => {\n                            response.data.data.forEach(company => {\n                                o.options.push({\n                                    title: company.Name,\n                                    value: company.SettingID\n                                });\n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })\n                    // o.options = this.orderStatusesSelect;\n                    break;\n                case 'client':\n                    axios.get('/clients')\n                        .then((response) => {\n                            response.data.data.forEach(client => {\n                                o.options.push({\n                                    title: client.CompanyName,\n                                    value: client.ClientID\n                                });\n                            });\n                        })\n                        .catch((error) => {\n                            console.log(error);\n                        })\n                    // o.options = this.orderStatusesSelect;\n                    break;\n                case 'pharmacy':\n                    o.options = this.pharmacies;\n                    break;\n                default:\n                    break;\n            }\n        });\n\n        this.getPharmacies();\n    },\n    methods: {\n        getPharmacies() {\n            axios.get(`/pharmacies/list`)\n                .then((response) => {\n                    let r = response.data.data;\n\n                    r.forEach(result => {\n                        this.pharmacies.push({\n                            id: result.PharmacyID,\n                            //value: result.Title,\n                            label: result.Title\n                        });\n                    });\n                })\n                .catch((error) => {\n                    console.log(error);\n                })\n        },\n        selectOpen(instance) {\n            //this is a specific fix for statuses since we need them to be wider than usual (when opening substatus selectors)\n            if (instance == 'status-extended') {\n                let element = document.querySelector('[data-instance-id=\"status-extended\"]').firstChild\n                element.classList.add('vue-treeselect__menu-container-body');\n            }\n        },\n        normalizer(node) {\n            return {\n                id: node.PharmacyID,\n                label: node.Title,\n            }\n        },\n    }\n}\n</script>\n"],"file":"assets/Orders-CtsNKcjA.js"}